import{f as d,c as p,b as s,g as r,F as y,o as g,u as h,l as m,h as C,i as b,j as f}from"./main-AtnrSmuo.js";const k=s("h1",null,"Home",-1),w=["disabled"],v={__name:"Home",setup(P){const n=h(),t=JSON.parse(localStorage.getItem("user"));async function i(){try{const e=await m(),{status:a,message:o}=e;if(a!=="ok")throw new Error(o);n.push("/")}catch(e){console.error(e)}}const l=d(()=>window.PublicKeyCredential&&PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable&&PublicKeyCredential.isConditionalMediationAvailable);async function c(){try{if((await Promise.all([PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable(),PublicKeyCredential.isConditionalMediationAvailable()])).every(Boolean))await u();else throw new Error}catch(e){console.error("This device does not support creating passkeys",e)}}async function u(){console.log("Start create passkey");try{const{data:e}=await C(t);console.log("data",e);const a=await b(e),o=await f({credentials:a,username:t==null?void 0:t.username,id:t==null?void 0:t.id});return console.log("createResult",o),o}catch(e){console.error("Fail to create passkey",e)}}return(e,a)=>(g(),p(y,null,[k,s("button",{disabled:!l.value,onClick:r(c,["prevent"])}," Create Passkeys ",8,w),s("button",{onClick:r(i,["prevent"])},"Logout")],64))}};export{v as default};
